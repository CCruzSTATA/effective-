**Taller 1 ** 

cls 
clear all 
set more off 

*PUNTO 1 

cd "/Users/laurapadilla/Documents/Andes/sexto semestre/stata/Taller 1"
import delimited "ECV2015_CCH.csv"

save "ECV2015_CCH.dta", replace 
tostring (directorio secuencia_encuesta secuencia_p orden), replace 


clear all 

*PUNTO 2 
cd "/Users/laurapadilla/Documents/Andes/sexto semestre/stata/Taller 1"
import delimited "ECV2015_S.csv"

save "ECV2015_S.dta", replace
tostring (directorio secuencia_encuesta secuencia_p orden), replace 


*PUNTO 3 

*¿cuáles son las variables de identificación de cada tabla?

** unique --> instalarlo 

**isid. ---> condicion lógica -> es. esta vab mi varible de indentificacion 


**. tipo como el nombre o el código del estudiante, etc.



*PUNTO 3 

*¿cuáles son las variables de identificación de cada tabla?

*Directorio, secuencia_encuesta,  secuencia_encuesta y orden

**. La unidad de observacion en este caso es el individuo en una comunidad.  "Cada individuo pertenece a un hogar, y a su vez, un hogar puede tener varios integrantes." 


*PUNTO 4

use "ECV2015_CCH.dta", replace
rename p6020 sexo
gen mujer = sexo==2 

*PUNTO 5

*EDAD=p6040*

gen n_menor_5 = 0
replace n_menor_5 = 1 if p6040<5
replace n_menor_5 = . if missing(p6040)
count if p6040 == .

gen n_menor_5y12 = 0
replace n_menor_5y12 = 1 if p6040>=5 & p6040<=12
replace n_menor_5y12 = . if missing(p6040)
count if p6040 == .

gen n_menor_13y18 = 0
replace n_menor_13y18 = 1 if p6040>=13 & p6040<18
replace n_menor_13y18 = . if missing(p6040)
count if p6040 == .

gen n_mayor_18 = 0
replace n_mayor_18 = 1 if p6040>=18
replace n_mayor_18 = . if missing(p6040)
count if p6040 == .

*PUNTO 6

*EDAD=p6040*

label variable n_menor_5 "niños menores de 5 años (no incluye 5)"
label variable n_menor_5y12 "niños entre 5 y 12 años)"

label variable n_menor_13y18 "menores de edad de 13 o más años (no incluye 18)"

label variable n_mayor_18 "mayores de edad (con 18 o más años)"


*PUNTO 7

*EDAD_PADRE=p6087*

rename p6087 nedu_padre
tab nedu_padre

// Definir etiquetas para los valores
label define educacion_padre ///
    1 "Algunos años de primaria" ///
    2 "Toda la primaria" ///
    3 "Algunos años de secundaria" ///
    4 "Toda la secundaria" ///
    5 "Uno o mas años de técnica o tecnológica" ///
    6 "Técnica o tecnológica completa" ///
    7 "Uno o mas años de universidad" ///
    8 "Universitaria completa" ///
    9 "Ninguno" ///
    10 "No sabe"

// Aplicar las etiquetas a la variable
label values nedu_padre educacion_padre

**PUNTO 8

**Eliminar variables no necesarias
rename p6040 edad

keep directorio secuencia_encuesta secuencia_p orden edad sexo n_menor_5 n_menor_5y12 n_menor_13y18 n_mayor_18

save "personas_revisada.dta", replace


**PUNTO 9 
cls 
clear all
set more off 

cd "/Users/laurapadilla/Documents/Andes/sexto semestre/stata/Taller 1"
import delimited "ECV2015_S.csv"
save "ECV2015_S.dta", replace 


** En este punto es necesario renombrar la información que está contenida en las variables ya que esta es muy larga; por tanto, hay que label las diferentes variables para que estén autocontenidas en el nombre. 



rename p6090 segusoc_salud
label var segusoc_salud "afiliado/cotizante/beneficiario de alguna entidad de seguridad social en salud"
describe segusoc_salud 


rename p6100 ident_segusoc
label var  ident_segusoc "idenitificación régimen de seguridad social afiliado"
describe ident_segusoc 

rename p6133 hospit_salud
label var hospit_salud "posibilidad de hospitalización últimos 12 meses"
describe hospit_salud

rename p6115 pagomens_segusoc
label var  pagomens_segusoc "Quién se encarga de pago de afiliación a seguridad social"
describe pagomens_segusoc


**PUNTO 10 

keep directorio secuencia_encuesta secuencia_p orden segusoc_salud ident_segusoc hospit_salud pagomens_segusoc

**PUNTO 11 

// En este punto, se busca obtener otra valoracion de la variable hospit_salud, antes llamada p6133. Ante esto deben recodificarse los valores dados a las variables. 

recode hospit_salud (2=0) (1=1)

**PUNTO 12 

// En  este punto tambien debe recodificarse inicialmente la variable de indificacion de seguro social de manera que se pueda determinar exactamente los individuos que hacen parte del regimen contributivo

// Esta nueva variable llamada reg_contributivo, toma el valor de 1 si la persona pertenece a este regimen, y 0 si no. 

recode ident_segusoc (1=1) (2=0) (3=0) (9=0), gen(reg_contributivo)


**PUNTO 13 

codebook 
egen missing = rowmiss (segusoc_salud  reg_contributivo hospit_salud pagomens_segusoc)

recode missing (2=1) (3=1) (4=1)



tab missing
count if missing == 1
tab missing
drop if missing == 1


save "tabla salud", replace 


**PUNTO 14 

* En este punto se hace un merge ya que es una unión horizontal, donde se considera que ambas bases tienen 4 variables llave (tanto la base máster como la using), ante eso se hace uso de la variable de identificación de ambas bases. 

merge 1:1 directorio secuencia_encuesta secuencia_p orden using "personas_revisada.dta"

* ¿Qué tipo de unión horizontal es esta? Este es un tipo de unión donde tanto en la base de datos master como en la using hay variables repetidas, por tanto se usa el many-to-many merge en las 4 variables llave específicas. 

* ¿Cuántas observaciones pegaron y cuántas no lo hicieron? de las 76,026 observaciones, pegaron 39,472. 

*¿Por qué hay observaciones que no están en una u otra tabla de datos? Esto se debe principalmente a que en puntos anteriores se eliminaron 47,038 variables tras realizar un proceso donde se eliminaba la  casilla si alguna de las variables tenia missing values. Por tanto, dado que hubo tantas eliminaciones en la segunda base de datos y ninguna en la primera, hay cierta incongruencia en las observaciones que pueden estar en una base de datos y en la otra no. 

**PUNTO 15 

sort directorio secuencia_encuesta

collapse (sum) secuencia_p mujer n_menor_5 n_menor_5y12 n_menor_13y18 n_mayor_18  segusoc_salud hospit_salud  reg_contributivo (mean) edad, by (directorio)

**PUNTO 16
egen ranking=rank(edad), field
save "tabla_hogares_revisada", replace 
sort ranking

**PUNTO 17 
gen ident_hogar =directorio + secuencia_p

**PUNTO 18

gen ident_hogar_str = string(ident_hogar)
gen ident_hogar_2 = substr(ident_hogar_str, 3, .)


**PUNTO 19 
preserve
keep in 1/100
mean edad 
sum reg_contributivo if reg_contributivo==1
mean mujer if mujer==1
restore 
